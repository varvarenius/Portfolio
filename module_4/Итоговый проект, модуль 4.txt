Задание 4.1
1/1 point (graded)
База данных содержит список аэропортов практически всех крупных городов России. В большинстве городов есть только один аэропорт. Исключение составляет:

SELECT city
FROM dst_project.airports
GROUP BY city
HAVING count(city)>1;

Задание 4.2
4/4 points (graded)
Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице?

SELECT count(DISTINCT status)
FROM dst_project.flights;

Вопрос 2. Какое количество самолетов находятся в воздухе на момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).

SELECT count(flight_id)
FROM dst_project.flights
WHERE status = 'Departed';

Вопрос 3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели 773 (Boeing 777-300)?

SELECT count(DISTINCT seat_no)
FROM dst_project.seats
WHERE aircraft_code = '773';

Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года?

SELECT count(flight_id)
FROM dst_project.flights
WHERE status = 'Arrived'
  AND actual_arrival BETWEEN '2017-04-01' AND '2017-09-01';

Задание 4.3
6/6 points (graded)
Вопрос 1. Сколько всего рейсов было отменено по данным базы?

SELECT count(flight_id)
FROM dst_project.flights
WHERE status = 'Cancelled';

Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок?

SELECT 'Boeing' aircraft,
                count(*)
FROM dst_project.aircrafts a
WHERE a.model LIKE 'Boeing%'
UNION ALL
SELECT 'Sukhoi Superjet' aircraft,
                         count(*)
FROM dst_project.aircrafts a
WHERE a.model LIKE 'Sukhoi Superjet%'
UNION ALL
SELECT 'Airbus' aircraft,
                count(*)
FROM dst_project.aircrafts a
WHERE a.model LIKE 'Airbus%';

Вопрос 3. В какой части (частях) света находится больше аэропортов?

SELECT count(timezone)
FROM dst_project.airports
WHERE timezone like 'Asia%';

SELECT count(timezone)
FROM dst_project.airports
WHERE timezone like 'Europe%';

Вопрос 4. У какого рейса была самая большая задержка прибытия за все время сбора данных? Введите id рейса (flight_id).

SELECT flight_id
FROM dst_project.flights
WHERE (actual_arrival - scheduled_arrival) in
    (SELECT max(actual_arrival - scheduled_arrival)
     FROM dst_project.flights);

Задание 4.4
4/4 points (graded)
Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных?

SELECT min(scheduled_departure)
FROM dst_project.flights;

Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе?

SELECT max(extract(epoch
                   FROM (f.scheduled_arrival - f.scheduled_departure))) / 60 AS duration_minutes
FROM dst_project.flights AS f;

Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT DISTINCT concat(departure_airport, ' - ', arrival_airport)
FROM dst_project.flights
WHERE (scheduled_arrival - scheduled_departure) in
    (SELECT max(scheduled_arrival - scheduled_departure)
     FROM dst_project.flights);

Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах? Секунды округляются в меньшую сторону (отбрасываются до минут).

SELECT round(avg(extract(epoch
                         FROM (scheduled_arrival - scheduled_departure))) / 60)
FROM dst_project.flights;

Задание 4.5
3/3 points (graded)
Вопрос 1. Мест какого класса у SU9 больше всего?

SELECT fare_conditions,
       count(seat_no) AS counts
FROM dst_project.seats
WHERE aircraft_code = 'SU9'
GROUP BY fare_conditions
ORDER BY counts DESC;

Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю?

SELECT min(total_amount)
FROM dst_project.bookings;

Вопрос 3. Какой номер места был у пассажира с id = 4313 788533?

SELECT seat_no
FROM dst_project.boarding_passes b
JOIN dst_project.tickets t ON b.ticket_no = t.ticket_no
WHERE passenger_id = '4313 788533';


Задание 5.1
5/5 points (graded)
Вопрос 1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?

SELECT count(flight_id)
FROM dst_project.flights f
LEFT JOIN dst_project.airports a ON f.arrival_airport = a.airport_code
WHERE city = 'Anapa'
  AND actual_arrival BETWEEN '2017-01-01' AND '2017-12-31';

Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года?

SELECT count(flight_id)
FROM dst_project.flights f
LEFT JOIN dst_project.airports a ON f.departure_airport = a.airport_code
WHERE city = 'Anapa'
  AND (date_part('year', actual_departure) = 2017)
  AND (date_part('month', actual_departure) in (12,
                                                1,
                                                2));

Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время.

SELECT count(flight_id)
FROM dst_project.flights f
LEFT JOIN dst_project.airports a ON f.departure_airport = a.airport_code
WHERE city = 'Anapa'
  AND status = 'Cancelled';

Вопрос 4. Сколько рейсов из Анапы не летают в Москву?

WITH tab AS
  (SELECT f.flight_no,
          f.arrival_airport,
          a.city
   FROM dst_project.flights f
   LEFT JOIN dst_project.airports a ON f.departure_airport = a.airport_code
   WHERE a.city = 'Anapa')
SELECT count(flight_no)
FROM tab
LEFT JOIN dst_project.airports aa ON tab.arrival_airport = aa.airport_code
WHERE aa.city != 'Moscow';

Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?

SELECT f.model,
       count(DISTINCT seat_no)
FROM dst_project.aircrafts f
LEFT JOIN dst_project.seats s ON f.aircraft_code = s.aircraft_code
LEFT JOIN dst_project.flights ff ON f.aircraft_code = ff.aircraft_code
LEFT JOIN dst_project.airports a ON ff.departure_airport = a.airport_code
WHERE a.city = 'Anapa'
GROUP BY f.model;

Проект

SELECT DISTINCT f.flight_id,
                flight_no,
                scheduled_arrival,
                scheduled_departure,
                actual_departure,
                actual_arrival,
                departure_airport,
                a.city AS city_departure,
                a.airport_name as airport_departure,
                arrival_airport,
                aa.city as city_arrival,
                aa.airport_name as airport_arrival,
                round(avg(extract(epoch
                                  FROM (actual_departure - scheduled_departure))) / 60) AS diff_departure,
                round(avg(extract(epoch
                                  FROM (actual_arrival - scheduled_arrival))) / 60) AS diff_arrival,
                round(avg(extract(epoch
                                  FROM (scheduled_arrival - scheduled_departure))) / 60) AS time_scheduled,
                round(avg(extract(epoch
                                  FROM (actual_arrival - actual_departure))) / 60) AS time_actual,
                s.fare_conditions,
                a.timezone,
                model,
                range,
                status,
                sum(amount) AS total_paid,
                case when s.fare_conditions = 'Business' then count(distinct s.seat_no)
                when s.fare_conditions = 'Economy' then count(distinct s.seat_no) end as business_economy_seats
FROM dst_project.flights f
LEFT JOIN dst_project.seats s ON f.aircraft_code = s.aircraft_code
LEFT JOIN dst_project.airports a ON f.departure_airport = a.airport_code
LEFT JOIN dst_project.airports aa ON f.arrival_airport = aa.airport_code
LEFT JOIN dst_project.aircrafts ac ON f.aircraft_code = ac.aircraft_code
LEFT JOIN dst_project.ticket_flights ff ON f.flight_id = ff.flight_id
WHERE departure_airport = 'AAQ'
  AND (date_trunc('month', scheduled_departure) in ('2017-01-01',
                                                    '2017-02-01',
                                                    '2017-12-01'))
  AND status not in ('Cancelled')
GROUP BY f.flight_id,
         flight_no,
         scheduled_arrival,
         scheduled_departure,
         actual_departure,
         actual_arrival,
         departure_airport,
         a.city,
         a.airport_name,
         arrival_airport,
         aa.city,
         aa.airport_name,
         s.fare_conditions,
         a.timezone,
         model,
         range,
         status
ORDER BY total_paid DESC,
         diff_arrival DESC,
         time_actual DESC,
         diff_departure DESC;
